17-Dec-11

* DONE

  * U1: As a user I can rename activity to correct my mistakes: made cell editable and get cell updates

18-Dec-11

* DONE

  * Remove TODO highlighting in *.apt files in IntelliJ (changed pattern to catch TODO\: instead of "TODO")

  * Plan backlog for version 0.5


19-Dec-11

* DONE

  * U3: As a user I want special "time tracking" activity
    to be started when I double-click its' name for edit so what I could
    easily track time spent on "time tracking" activities
    (version 0.5, caused by U1, depends on U2)

    * Found a way to disable selection on cell editing in JTable
      (Double click generates two mouse events, on first event selection is adjusted
      second events triggers cell editing. With custom CellEditor it is possible to detect
      start editing situation by listening for focus event of underlying editor's component
      and trigger selection to whatever you want)


25-Dec-11

* DONE

  * U1: As a user I can rename activity to correct my mistakes
    (version 0.5)

    * Rename activity in the database and see it is updated in the activity list

  * Vote for MASSEMBLY-449 in say thanks to the guy who have offered a workaround and remove TODO in the pom.xml

26-Dec-11

* DONE

  * U10: As a user I want to have distribution of TimeTracker to be able to run it on new workstations and
    with new database files.

02-Jan-12

* DONE

  * Resolve dependency
---
  <dependency>
    <groupId>org.apache.derby</groupId>
    <artifactId>derbytools</artifactId>
    <version>10.4.1.3</version>
  </dependency>
---

  (run mvn antrun:run -PtestDB to achive this)

04-Jan-12

* DONE

  * Connect to timeDB with my actual entries and issue several queries to see how much time was spent on certain
    task during specified interval of time.

  * U9: As a user I want to see time spent on activities in human readable format

* TODO

  * U4: As a user I can hide activities from control panel to free it up for faster switching

    * Decided to implement activities hiding with separate column of controls

05-Jan-12

* DONE

  * U4: As a user I can hide activities from control panel to free it up for faster switching

    * Add column with hide button in ActivityControlList

06-Jan-12

* DONE

  * U4: As a user I can hide activities from control panel to free it up for faster switching

    * Implement ActivityControlList#finishActivity method together with test

    * Implement cell editor and cell renderer with one button component and pass idx as a field to the component's
      action performed cellButtonListener when getTableCellEditorComponent is called to invoke finishActivity(idx) on button
      pressed.

    * Implement callback for the button pressed

08-Jan-12

* DONE

  * Add @Null annotation to project and setup IDEA to honor it while doing its checks

  * U11: As a user I want "add activity" button to be on top of Activity Control List and to
    be "acceptably small" to avoid wasting of space on the screen

  * U15: I want activity control list to be vertically scrollable so what I could add a any amount of activities
    into it while preserving small height of the window.

  * U16: I want all columns on activity control list except name (the first one) to be fixed width,
    but showing its contents without cropping while first
    column with name of the task to take all remaining size so what I see as much of the task name as possible.

09-Jan-12

* DONE

  * U21: I want "done/finish" button on Activity Control List (3rd column) to have "X" label or icon so what
    it takes least size possible.

  * Think how to implement U18, U22 and U13 (have had a long phone call with brother)

  * U25: I want "very small" time entries to be not saved to avoid garbage in the history. Small time entries
    could appear due to mistaken selection and Swing jtable selection on double-click. Threshold to consider
    "small time entry" a garbage is 1 to 3 secs. You couldn't do anything sensible for this small amount of time.

  * U18: I want be able to increase timer value so what I could add several minutes if I forgot to
    start the timer. This should create new timeentry with time_end equal to current moment and times_start
    with specified amount of minutes ago.
    (blocked by U25)

    * Implement GUI part

    * Implement controller

  * U26: I want time cell to be empty (or have some "good value") when I double-click it for
    time adjustment so what I don't spent time on cleaning it manually.

14-Jan-12

* DONE

  * Added pullTimeDB.sh which allows to sync between to machines with timetracker over ssh

19-Jan-12

* DONE

  * U13: I want be able to decrease timer value so what I could decrease its value for 3 or 5 minutes if I forgot
    to turn the timer off when quit for cup of coffee. This is achieved by moving end_time of last time entry backwards.
    If amount of time asked to decrease is greater then duration of time entry then last time entry is removed
    and overall timer value is decreased on duration of time entry instead of requested amount.

    * Implement TimeEntryDao#getLastTimeEntry(int activityId) method

    * Implement time decrease in AdjustTimeController

28-Jan-12

* DONE

  * TestTimeEntryDao#testLatestTimeEntryForEmptyActivity fails when run in full suite after U13, fix it.

  * Timetracker doesn't start with class not found (Main) when build with assembly:single instead of assembly:assembly
    (bound assembly:single to package phase to use mvn package instead of assembly:assembly)

* TODO

  * U20: I want name to be of 1024 length so what I could enter "very long" activity names

29-Jan-12

* TODO

  * U17: I want activity names to be wrapped so what I could see full activity name when it's too log to fit
    into cell width`

Version 0.4

  This version contains minimal set of features to run Timetracker as simple "multi-task timer"


Version 0.5

  This version contains minimal set of features to start run Timetracker for work

  * U5: As a user I can view activities by days to be able select them back to control panel

  * U6: As a user I can restore activities back to control list to be able to start/stop them

  * U7: As a user I want to view activities grouped by tasks and days so what I could easily find activities to
    to restore them back into control list, to understand what was done on certain day, and to trigger export
    to toggl CSV for certain day.

  * U8: As a user I want to export "tasks done by day report" in CSV format compatible with toggl to be able
    to import it into JIRA with timehelp tool.

Version 0.6

  This version improves "multi-task timer" (Activity Control List) usability

  * U14: I want "add activity" form to have the same size and position as it was when
    last closed to avoid wasting time on resizing and repositioning

  * U18: I want activity control list to have only time summed up for one day so what I can see how much
    time is spent on the task during the day to understand how overall time tracked per day is summed up.

  * U19: I want to see sum up time for tasks in activity control list for the day so what I could understand
    how much time did I already spent for this day to estimate this day efficiency

  * U2: As a user I want to see "time tracking" activity on the control list, so what I could
    easily start it when renaming/creating/hiding activities or doing some other time tracking
    related stuff.
    (version 0.5, caused by U3)

    * Add time tracking activity to the database if not present on construction of ActivityControlList

  * U3: As a user I want special "time tracking" activity
    to be started when I double-click its' name for edit so what I could
    easily track time spent on "time tracking" activities
    (version 0.5, caused by U1, depends on U2)

    * Start the "time tracking" activity (U2) on "start edit" event

  * U23: I want just added activity to be started so what I don't waste time on starting it additionly

  * U22: I want to add new time entry specifying time_start and duration, so what I could add some time
    measurements done outside of the timetracker with stopwatch and piece of paper or from another timer program.

    * Implement GUI stub which will form the database update request and output it into sysout

    * Add time edit controller which will update the database

    * Add 15 min for U21 task my timeDB for time around 2:10 - 2:25, Jan 9

  * U24: I want to be notified when requested time decrease for activity is greater then duration of activity
    so what I could see that my decrease request won't be executed fully.
    See ActivityControlList#processStopData method

  * U27: I want to adjust time without using of keyboard with predefined set of values (i.e +3m -3m +2m -2m etc)
    so what I could save some time on switching between mouse and keyboard.

    * How should I handle if user wants to decrease on some value which is not predefined with mouse only?


Backlog

  * U12: As a user I want to see time I started to spend time on the activity today and time
    I finished to spend time to ???
    (is there real necessity in it?)

  * U28: I want to select and edit time entries: two fields of three timeStart, timeEnd, duration so what
    I could

    * Decrease "Prepare text to send fax request for booking and receive fax booking confirmation" for 5 mins after
      this feature is ready.

    * Decrease "Скачать Син Сити" for 30 mins and increase "Посмотреть 'Во имя короля" for 30 mins

    * Decrease "Купить колонки" for 20 mins

    * Decrease "Сделать расчет уплаченных налогов" for 2h10m

    * Left only 2 mins in the biggest time entry for Email for 16-Jan-2012